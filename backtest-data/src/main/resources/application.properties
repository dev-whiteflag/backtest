# General Configuration
quarkus.datasource.db-kind = postgresql
quarkus.hibernate-orm.database.generation = update
%dev.quarkus.hibernate-orm.database.generation = drop-and-create

quarkus.datasource.username = ${BACKTEST_DB_USERNAME:postgres}
quarkus.datasource.password = ${BACKTEST_DB_PASSWORD:postgres}
# This works in this docker-only setup but would need to be changed in a Kubernetes env (point to a load balancer in front of db)
quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/backtest

# REST Clients Configuration
quarkus.rest-client.olinda.cotacao.uri=https://olinda.bcb.gov.br/olinda/servico/PTAX/versao/v1/odata
%dev.quarkus.rest-client.logging.scope=request-response
%dev.quarkus.rest-client.logging.body-limit=1024
%dev.quarkus.log.category."org.jboss.resteasy.reactive.client.logging".level=DEBUG

# Tracing Configuration
quarkus.jaeger.service-name=backtest
%dev.quarkus.jaeger.service-name=backtest-dev
%test.quarkus.jaeger.service-name=backtest-test
quarkus.jaeger.sampler-type=const
quarkus.jaeger.sampler-param=1
quarkus.datasource.jdbc.tracing=true

# API Docs Configuration
quarkus.smallrye-openapi.info-title=backtest API
%dev.quarkus.smallrye-openapi.info-title=backtest API (dev)
%test.quarkus.smallrye-openapi.info-title=backtest API (test)
quarkus.smallrye-openapi.info-version=1.0.0-SNAPSHOT
quarkus.smallrye-openapi.info-description=backtest é um projeto feito para testar uma stack de backend normalmente usada com microserviços.
